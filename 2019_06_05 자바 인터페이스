# Programing전체메일

목록

답장

전체답장

전달

삭제

완전삭제

재작성

읽음표시
 읽음/읽지않음 메뉴
이동

스팸신고

저장

인쇄

H
다음이전
일일 커밋  별표시
더 보기
보낸사람
"헬프데스크"<whapkj303@citizen.seoul.kr> [IP : 210.90.46.250 ] ( Korea, Republic of country_img )  수신거부  주소록 저장
보낸날짜
2019-06-05 16:22
전체태그
2019-06-05

08. 인터페이스의 역할

 

인터페이스는 객체 사용 방법을 정의한 타입으로 다형성 구현하는 매우 중요한 역할을 한다.

인터페이스를 두는 이유는 개발 코드를 수정하지 않고, 사용하는 객체를 변경할 수 있도록 하기 위함.

 

즉, 코드 변경 없이 실행 내용과 리턴값을 다양화할 수 있다

 

인터페이스는 상수와 메소드만을 구성 맴버로 가진다. 객체로 생성할 수 없기 때문에 생성자를 가질 수 없다. 자바 8부터는 디퐅트,정적 메소드도 선언이 가능하다.

 

인터페이스는 데이터를 저장 할 수 없기 때문에 데이터를 저장할 인스턴스 또는 정적 필드를 선언할 수 없다. 대신 상수 필드만 선언 할 수 있다. 인터페이스에 선언된 필드는 모두 public static final로 컴파일됨.

* 상수 필드 선언시 값을 선언하지 않으면 컴파일 에러!! 어떤 값이든 주어져야 한다.

 

인터페이스 구현

구현 클래스 :　인터페이스 타입으로 사용 할 수 있음을 알려주기 위해 클래스 선언부에 implement 키워드를 추가하고 인터페이스명을 명시함.

 

인터페이스의 모든 메소드는 기본적으로 public 접근 제한을 가짐!!

 

만약 인터페이스에 선언된 추상 메소드에 대응하는 실체 메소드를 구현 클래스가 작성하지 않으면 구현 클래스는 자동적으로 추상 클래스가 된다.

그렇기 때문에 abstract 키워드를 추가해야 한다.

 

자동 타입 변환

인터페이스 변수 = 구현객체; (자동 타입 변환)

구현 클래스를 상속해서 자식 클래스를 만들었다면 자식 객체 역시 인터페이스 타입으로 자동 타입 변환 시킬 수 있다. 자동타입 변환을 이용하면 필드의 다형성과 매개 변수의 다형성을 구현 할 수 있다.

매개 변수의 타입이 인터페이스일 경우, 어떠한 구현 객체도 매개값으로 사용할 수 있고, 어떤 구현 객체가 제공되느냐에 따라 메소드의 실행 결과는 다양해질 수 있다.(매개 변수의 다형성)

 

* 강제 타입 변환 (Casting)

구현객체가 인터페이스타입으로 자동변환하면, 인터페이스가 선언된 메소드만 사용 가능하다는 제약 사항이 따른다.

 

구현클래스 변수 = (구현클래스) 인터페이스변수;

 

* 객체 타입 확인 (instanceof)

타입이 다르면, ClassCastException이 발생한다.

 

(instanceof) 연산자로 확인하고 안전하게 강제 타입 변환을 해야 한다.

 

* 인터페이스 상속

extends 키워드

하위 인터페이스를 구현하는 클래스는 하위, 상위 인터페이그 추상 메소드에 대한 실체 메소드를 가지고 있어야 한다.

하위 인터페이스는 상, 하위 인터페이스에 선언된 모든 메소드를 사용할 수 있으며,

상위 인터페이스는 상위 인터페이스에 선언된 메소드만 사용이 가능하다
